package com.juan.shop.file;import exception.LogicException;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.core.io.Resource;import org.springframework.stereotype.Service;import org.springframework.util.StringUtils;import org.springframework.web.multipart.MultipartFile;import util.Checker;import util.DateUtils;import util.FileUtils;import util.IdUtils;import java.io.File;import java.io.IOException;import java.util.Date;import java.util.Optional;/** * @author liguanhuan */@Service@Slf4jpublic class FileServiceImpl implements IFileService {    @Value("${file.rootPath}")    private String rootPath;    private static final String FILE_PATH = "file";    @Autowired    private UploeaFileRepository uploeaFileRepository;    @Override    public long upload(MultipartFile file) {        Checker.isNull(file, "上传文件不能为空！");        Date now = new Date();        Resource resource = file.getResource();        String fileName = resource.getFilename();        String fileSuffix = FileUtils.getFileSuffix(fileName);        String dateStr = DateUtils.format(now, "yyyyMM");        String realName = "" + IdUtils.genId();        if (!StringUtils.isEmpty(fileSuffix)) {            realName = realName + "." + fileSuffix;        }        String filePath = rootPath  + File.separator + dateStr;        File dir = new File(filePath);        if (!dir.exists()) {            boolean mkdirs = dir.mkdirs();            if (!mkdirs) {                log.info("创建文件夹失败！");                throw LogicException.valueOfUnknow("创建文件夹失败！");            }        }        String totalPath = filePath + File.separator + realName;        try {            file.transferTo(new File(totalPath));        } catch (IOException e) {            log.error("文件保存异常:" + totalPath, e);            throw LogicException.valueOfUnknow("文件保存异常：" + totalPath);        }        String src = File.separator + FILE_PATH + File.separator + dateStr + File.separator + realName;        log.info("上传文件{}", totalPath);        // 保存文件路径        UploadFile uploadFile = new UploadFile();        uploadFile.setFileName(fileName);        uploadFile.setPath(totalPath);        uploadFile.setRealName(realName);        uploadFile.setSrc(src);        uploadFile.setCreateDate(now);        uploadFile.setUpdateDate(now);        uploeaFileRepository.save(uploadFile);        log.info("保存文件{}路径[{}]", uploadFile.getId(), uploadFile.getPath());        return uploadFile.getId();    }    @Override    public Optional<UploadFile> findById(Long id) {        return uploeaFileRepository.findById(id);    }}